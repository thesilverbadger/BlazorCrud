@page "/games"
@using BlazorCrud.Shared
@attribute [StreamRendering]

@inject IGameService GameService

<div class="row">
    <div class="col">
        <h3>Games</h3>
        <p>
            This page is loaded using Server Side Rendering (SSR), which is effectively Razor Pages but with Blazor components <br/>
            There is no rich interactivity on this page, with the exception of the &lt;NavigationButton/&gt; component. <br/>
            You can use regular HTML navigation, like links.
        </p>
        <p>
            However, with StreamRendering you can render the HTML before the results of async calls (like data access), and then
            stream the results into the page. Magic!
        </p>
    </div>
</div>

<div class="row">
    <div class="col">
        <NavigationButton Path="/games/create" IconClass="bi-plus-lg" Text="Create Game"></NavigationButton>
    </div>
</div>

@if (_games is null)
{
    <div class="row mt-3">
        <div class="col-sm-12 col-md-6 col-lg-4">
            <div class="card" aria-hidden="true">
                <div class="card-body">
                    <h5 class="card-title placeholder-glow">
                        <span class="placeholder col-12"></span>
                    </h5>
                    <a class="btn btn-outline-primary float-end disabled placeholder col-3" aria-disabled="true"></a>
                </div>
            </div>
        </div>
    </div>
}
else if(_games.Count == 0)
{
    <div class="row">
        <div class="col">
            <span>No games found</span>
        </div>
    </div>
}
else
{
    <div class="row">
        @foreach (var game in _games)
        {
            <div class="col-sm-12 col-md-6 col-lg-4">
                <div class="card mt-3">
                    <div class="card-body">
                        <h5 class="card-title">@game.Name</h5>
                        <a href="/games/edit/@game.Id" class="btn btn-outline-primary float-end"><i class="bi bi-pencil-fill pe-2"></i>Edit</a>
                    </div>
                </div>
            </div>
        }
    </div>
}

@code {
    private List<GameDto>? _games;

    protected override async Task OnInitializedAsync()
    {
        _games = await GameService.GetAllAsync();
    }
}